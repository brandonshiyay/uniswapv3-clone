{"ast":null,"code":"import { ethers } from 'ethers';\nimport { poolCodeHash } from './constants';\nconst sortTokens = (tokenA, tokenB) => {\n  return tokenA.toLowerCase() < tokenB.toLowerCase ? [tokenA, tokenB] : [tokenB, tokenA];\n};\nconst computePoolAddress = (factory, tokenA, tokenB, fee) => {\n  [tokenA, tokenB] = sortTokens(tokenA, tokenB);\n  return ethers.utils.getCreate2Address(factory, ethers.utils.keccak256(ethers.utils.solidityPack(['address', 'address', 'uint24'], [tokenA, tokenB, fee])), poolCodeHash);\n};\nexport default computePoolAddress;","map":{"version":3,"names":["ethers","poolCodeHash","sortTokens","tokenA","tokenB","toLowerCase","computePoolAddress","factory","fee","utils","getCreate2Address","keccak256","solidityPack"],"sources":["/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/src/lib/computePoolAddress.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport { poolCodeHash } from './constants';\n\nconst sortTokens = (tokenA, tokenB) => {\n  return tokenA.toLowerCase() < tokenB.toLowerCase ? [tokenA, tokenB] : [tokenB, tokenA];\n}\n\nconst computePoolAddress = (factory, tokenA, tokenB, fee) => {\n  [tokenA, tokenB] = sortTokens(tokenA, tokenB);\n\n  return ethers.utils.getCreate2Address(\n    factory,\n    ethers.utils.keccak256(\n      ethers.utils.solidityPack(\n        ['address', 'address', 'uint24'],\n        [tokenA, tokenB, fee]\n      )),\n    poolCodeHash\n  );\n}\n\nexport default computePoolAddress;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,YAAY,QAAQ,aAAa;AAE1C,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;EACrC,OAAOD,MAAM,CAACE,WAAW,EAAE,GAAGD,MAAM,CAACC,WAAW,GAAG,CAACF,MAAM,EAAEC,MAAM,CAAC,GAAG,CAACA,MAAM,EAAED,MAAM,CAAC;AACxF,CAAC;AAED,MAAMG,kBAAkB,GAAGA,CAACC,OAAO,EAAEJ,MAAM,EAAEC,MAAM,EAAEI,GAAG,KAAK;EAC3D,CAACL,MAAM,EAAEC,MAAM,CAAC,GAAGF,UAAU,CAACC,MAAM,EAAEC,MAAM,CAAC;EAE7C,OAAOJ,MAAM,CAACS,KAAK,CAACC,iBAAiB,CACnCH,OAAO,EACPP,MAAM,CAACS,KAAK,CAACE,SAAS,CACpBX,MAAM,CAACS,KAAK,CAACG,YAAY,CACvB,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,EAChC,CAACT,MAAM,EAAEC,MAAM,EAAEI,GAAG,CAAC,CACtB,CAAC,EACJP,YAAY,CACb;AACH,CAAC;AAED,eAAeK,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}