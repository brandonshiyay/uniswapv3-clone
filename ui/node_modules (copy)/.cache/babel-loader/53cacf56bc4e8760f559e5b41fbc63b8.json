{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/src/components/MetaMask.js\";\nimport { useContext } from 'react';\nimport { MetaMaskContext } from '../contexts/MetaMask';\nimport './MetaMask.css';\nvar chainIdToChain = function chainIdToChain(chainId) {\n  switch (chainId) {\n    case '0x1':\n      return 'Mainnet';\n    case '0x7a69':\n      return 'Anvil';\n    default:\n      return 'unknown chain';\n  }\n  ;\n};\nvar shortAddress = function shortAddress(address) {\n  return address.slice(0, 6) + \"...\" + address.slice(-4);\n};\nvar statusConnected = function statusConnected(account, chain) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Connected to \", chainIdToChain(chain), \" as \", shortAddress(account));\n};\nvar statusNotConnected = function statusNotConnected(connect) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"MetaMask is not connected. \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }\n  }, \"Connect\"));\n};\nvar renderStatus = function renderStatus(status, account, chain, connect) {\n  switch (status) {\n    case 'connected':\n      return statusConnected(account, chain);\n    case 'not_connected':\n      return statusNotConnected(connect);\n    case 'not_installed':\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }, \"MetaMask is not installed.\");\n    default:\n      return;\n  }\n};\nvar MetaMask = function MetaMask() {\n  var context = useContext(MetaMaskContext);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"MetaMaskContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, renderStatus(context.status, context.account, context.chain, context.connect));\n};\nexport default MetaMask;","map":{"version":3,"names":["useContext","MetaMaskContext","chainIdToChain","chainId","shortAddress","address","slice","statusConnected","account","chain","React","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","statusNotConnected","connect","onClick","renderStatus","status","MetaMask","context","className"],"sources":["/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/src/components/MetaMask.js"],"sourcesContent":["import { useContext } from 'react';\nimport { MetaMaskContext } from '../contexts/MetaMask';\nimport './MetaMask.css';\n\nconst chainIdToChain = (chainId) => {\n  switch (chainId) {\n    case '0x1':\n      return 'Mainnet';\n\n    case '0x7a69':\n      return 'Anvil'\n\n    default:\n      return 'unknown chain';\n  };\n}\n\nconst shortAddress = address => (address.slice(0, 6) + \"...\" + address.slice(-4))\n\nconst statusConnected = (account, chain) => {\n  return (\n    <span>Connected to {chainIdToChain(chain)} as {shortAddress(account)}</span>\n  );\n}\n\nconst statusNotConnected = (connect) => {\n  return (\n    <span>\n      MetaMask is not connected. <button onClick={connect}>Connect</button>\n    </span>\n  )\n}\n\nconst renderStatus = (status, account, chain, connect) => {\n  switch (status) {\n    case 'connected':\n      return statusConnected(account, chain)\n\n    case 'not_connected':\n      return statusNotConnected(connect)\n\n    case 'not_installed':\n      return <span>MetaMask is not installed.</span>\n\n    default:\n      return;\n  }\n}\n\nconst MetaMask = () => {\n  const context = useContext(MetaMaskContext);\n\n  return (\n    <section className=\"MetaMaskContainer\">\n      {renderStatus(context.status, context.account, context.chain, context.connect)}\n    </section>\n  );\n}\n\nexport default MetaMask;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,OAAO,gBAAgB;AAEvB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAK;EAClC,QAAQA,OAAO;IACb,KAAK,KAAK;MACR,OAAO,SAAS;IAElB,KAAK,QAAQ;MACX,OAAO,OAAO;IAEhB;MACE,OAAO,eAAe;EAAC;EAC1B;AACH,CAAC;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAGC,OAAO;EAAA,OAAKA,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,CAAC;AAEjF,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,OAAO,EAAEC,KAAK,EAAK;EAC1C,oBACEC,KAAA,CAAAC,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,eAAa,EAAChB,cAAc,CAACO,KAAK,CAAC,EAAC,MAAI,EAACL,YAAY,CAACI,OAAO,CAAC,CAAQ;AAEhF,CAAC;AAED,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,OAAO,EAAK;EACtC,oBACEV,KAAA,CAAAC,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,6BACuB,eAAAR,KAAA,CAAAC,aAAA;IAAQU,OAAO,EAAED,OAAQ;IAAAR,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAO,CAAS,CAChE;AAEX,CAAC;AAED,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAEf,OAAO,EAAEC,KAAK,EAAEW,OAAO,EAAK;EACxD,QAAQG,MAAM;IACZ,KAAK,WAAW;MACd,OAAOhB,eAAe,CAACC,OAAO,EAAEC,KAAK,CAAC;IAExC,KAAK,eAAe;MAClB,OAAOU,kBAAkB,CAACC,OAAO,CAAC;IAEpC,KAAK,eAAe;MAClB,oBAAOV,KAAA,CAAAC,aAAA;QAAAC,MAAA,EAAAC,KAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAM,4BAA0B,CAAO;IAEhD;MACE;EAAO;AAEb,CAAC;AAED,IAAMM,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,IAAMC,OAAO,GAAGzB,UAAU,CAACC,eAAe,CAAC;EAE3C,oBACES,KAAA,CAAAC,aAAA;IAASe,SAAS,EAAC,mBAAmB;IAAAd,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnCI,YAAY,CAACG,OAAO,CAACF,MAAM,EAAEE,OAAO,CAACjB,OAAO,EAAEiB,OAAO,CAAChB,KAAK,EAAEgB,OAAO,CAACL,OAAO,CAAC,CACtE;AAEd,CAAC;AAED,eAAeI,QAAQ"},"metadata":{},"sourceType":"module"}