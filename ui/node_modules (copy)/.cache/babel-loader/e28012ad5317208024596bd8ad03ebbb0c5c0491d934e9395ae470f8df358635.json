{"ast":null,"code":"/**\n * This class represents a single search node in the exploration tree for\n * A* algorithm.\n * \n * @param {Object} node  original node in the graph\n */\nfunction NodeSearchState(node) {\n  this.node = node;\n\n  // How we came to this node?\n  this.parent = null;\n  this.closed = false;\n  this.open = 0;\n  this.distanceToSource = Number.POSITIVE_INFINITY;\n  // the f(n) = g(n) + h(n) value\n  this.fScore = Number.POSITIVE_INFINITY;\n\n  // used to reconstruct heap when fScore is updated.\n  this.heapIndex = -1;\n}\n;\nfunction makeSearchStatePool() {\n  var currentInCache = 0;\n  var nodeCache = [];\n  return {\n    createNewState: createNewState,\n    reset: reset\n  };\n  function reset() {\n    currentInCache = 0;\n  }\n  function createNewState(node) {\n    var cached = nodeCache[currentInCache];\n    if (cached) {\n      // TODO: This almost duplicates constructor code. Not sure if\n      // it would impact performance if I move this code into a function\n      cached.node = node;\n      // How we came to this node?\n      cached.parent = null;\n      cached.closed = false;\n      cached.open = 0;\n      cached.distanceToSource = Number.POSITIVE_INFINITY;\n      // the f(n) = g(n) + h(n) value\n      cached.fScore = Number.POSITIVE_INFINITY;\n\n      // used to reconstruct heap when fScore is updated.\n      cached.heapIndex = -1;\n    } else {\n      cached = new NodeSearchState(node);\n      nodeCache[currentInCache] = cached;\n    }\n    currentInCache++;\n    return cached;\n  }\n}\nmodule.exports = makeSearchStatePool;","map":{"version":3,"names":["NodeSearchState","node","parent","closed","open","distanceToSource","Number","POSITIVE_INFINITY","fScore","heapIndex","makeSearchStatePool","currentInCache","nodeCache","createNewState","reset","cached","module","exports"],"sources":["/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/node_modules/ngraph.path/a-star/makeSearchStatePool.js"],"sourcesContent":["/**\n * This class represents a single search node in the exploration tree for\n * A* algorithm.\n * \n * @param {Object} node  original node in the graph\n */\nfunction NodeSearchState(node) {\n  this.node = node;\n\n  // How we came to this node?\n  this.parent = null;\n\n  this.closed = false;\n  this.open = 0;\n\n  this.distanceToSource = Number.POSITIVE_INFINITY;\n  // the f(n) = g(n) + h(n) value\n  this.fScore = Number.POSITIVE_INFINITY;\n\n  // used to reconstruct heap when fScore is updated.\n  this.heapIndex = -1;\n};\n\nfunction makeSearchStatePool() {\n  var currentInCache = 0;\n  var nodeCache = [];\n\n  return {\n    createNewState: createNewState,\n    reset: reset\n  };\n\n  function reset() {\n    currentInCache = 0;\n  }\n\n  function createNewState(node) {\n    var cached = nodeCache[currentInCache];\n    if (cached) {\n      // TODO: This almost duplicates constructor code. Not sure if\n      // it would impact performance if I move this code into a function\n      cached.node = node;\n      // How we came to this node?\n      cached.parent = null;\n\n      cached.closed = false;\n      cached.open = 0;\n\n      cached.distanceToSource = Number.POSITIVE_INFINITY;\n      // the f(n) = g(n) + h(n) value\n      cached.fScore = Number.POSITIVE_INFINITY;\n\n      // used to reconstruct heap when fScore is updated.\n      cached.heapIndex = -1;\n\n    } else {\n      cached = new NodeSearchState(node);\n      nodeCache[currentInCache] = cached;\n    }\n    currentInCache++;\n    return cached;\n  }\n}\nmodule.exports = makeSearchStatePool;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,IAAI,EAAE;EAC7B,IAAI,CAACA,IAAI,GAAGA,IAAI;;EAEhB;EACA,IAAI,CAACC,MAAM,GAAG,IAAI;EAElB,IAAI,CAACC,MAAM,GAAG,KAAK;EACnB,IAAI,CAACC,IAAI,GAAG,CAAC;EAEb,IAAI,CAACC,gBAAgB,GAAGC,MAAM,CAACC,iBAAiB;EAChD;EACA,IAAI,CAACC,MAAM,GAAGF,MAAM,CAACC,iBAAiB;;EAEtC;EACA,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;AACrB;AAAC;AAED,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,SAAS,GAAG,EAAE;EAElB,OAAO;IACLC,cAAc,EAAEA,cAAc;IAC9BC,KAAK,EAAEA;EACT,CAAC;EAED,SAASA,KAAKA,CAAA,EAAG;IACfH,cAAc,GAAG,CAAC;EACpB;EAEA,SAASE,cAAcA,CAACZ,IAAI,EAAE;IAC5B,IAAIc,MAAM,GAAGH,SAAS,CAACD,cAAc,CAAC;IACtC,IAAII,MAAM,EAAE;MACV;MACA;MACAA,MAAM,CAACd,IAAI,GAAGA,IAAI;MAClB;MACAc,MAAM,CAACb,MAAM,GAAG,IAAI;MAEpBa,MAAM,CAACZ,MAAM,GAAG,KAAK;MACrBY,MAAM,CAACX,IAAI,GAAG,CAAC;MAEfW,MAAM,CAACV,gBAAgB,GAAGC,MAAM,CAACC,iBAAiB;MAClD;MACAQ,MAAM,CAACP,MAAM,GAAGF,MAAM,CAACC,iBAAiB;;MAExC;MACAQ,MAAM,CAACN,SAAS,GAAG,CAAC,CAAC;IAEvB,CAAC,MAAM;MACLM,MAAM,GAAG,IAAIf,eAAe,CAACC,IAAI,CAAC;MAClCW,SAAS,CAACD,cAAc,CAAC,GAAGI,MAAM;IACpC;IACAJ,cAAc,EAAE;IAChB,OAAOI,MAAM;EACf;AACF;AACAC,MAAM,CAACC,OAAO,GAAGP,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}