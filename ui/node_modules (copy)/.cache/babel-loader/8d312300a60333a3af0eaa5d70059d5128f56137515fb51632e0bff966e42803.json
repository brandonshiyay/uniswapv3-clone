{"ast":null,"code":"var _jsxFileName = \"/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/src/components/MetaMask.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { MetaMaskContext } from '../contexts/MetaMask';\nimport './MetaMask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chainIdToChain = chainId => {\n  switch (chainId) {\n    case '0x1':\n      return 'Mainnet';\n    case '0x7a69':\n      return 'Anvil';\n    default:\n      return 'unknown chain';\n  }\n  ;\n};\nconst shortAddress = address => address.slice(0, 6) + \"...\" + address.slice(-4);\nconst statusConnected = (account, chain) => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Connected to \", chainIdToChain(chain), \" as \", shortAddress(account)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\nconst statusNotConnected = connect => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"MetaMask is not connected. \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\nconst renderStatus = (status, account, chain, connect) => {\n  switch (status) {\n    case 'connected':\n      return statusConnected(account, chain);\n    case 'not_connected':\n      return statusNotConnected(connect);\n    case 'not_installed':\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"MetaMask is not installed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    default:\n      return;\n  }\n};\nconst MetaMask = () => {\n  _s();\n  const context = useContext(MetaMaskContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"MetaMaskContainer\",\n    children: renderStatus(context.status, context.account, context.chain, context.connect)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MetaMask, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c = MetaMask;\nexport default MetaMask;\nvar _c;\n$RefreshReg$(_c, \"MetaMask\");","map":{"version":3,"names":["useContext","MetaMaskContext","jsxDEV","_jsxDEV","chainIdToChain","chainId","shortAddress","address","slice","statusConnected","account","chain","children","fileName","_jsxFileName","lineNumber","columnNumber","statusNotConnected","connect","onClick","renderStatus","status","MetaMask","_s","context","className","_c","$RefreshReg$"],"sources":["/home/brandon/security/learning/defi/uniswapv3-src/uniswapv3-code/ui/src/components/MetaMask.js"],"sourcesContent":["import { useContext } from 'react';\nimport { MetaMaskContext } from '../contexts/MetaMask';\nimport './MetaMask.css';\n\nconst chainIdToChain = (chainId) => {\n  switch (chainId) {\n    case '0x1':\n      return 'Mainnet';\n\n    case '0x7a69':\n      return 'Anvil'\n\n    default:\n      return 'unknown chain';\n  };\n}\n\nconst shortAddress = address => (address.slice(0, 6) + \"...\" + address.slice(-4))\n\nconst statusConnected = (account, chain) => {\n  return (\n    <span>Connected to {chainIdToChain(chain)} as {shortAddress(account)}</span>\n  );\n}\n\nconst statusNotConnected = (connect) => {\n  return (\n    <span>\n      MetaMask is not connected. <button onClick={connect}>Connect</button>\n    </span>\n  )\n}\n\nconst renderStatus = (status, account, chain, connect) => {\n  switch (status) {\n    case 'connected':\n      return statusConnected(account, chain)\n\n    case 'not_connected':\n      return statusNotConnected(connect)\n\n    case 'not_installed':\n      return <span>MetaMask is not installed.</span>\n\n    default:\n      return;\n  }\n}\n\nconst MetaMask = () => {\n  const context = useContext(MetaMaskContext);\n\n  return (\n    <section className=\"MetaMaskContainer\">\n      {renderStatus(context.status, context.account, context.chain, context.connect)}\n    </section>\n  );\n}\n\nexport default MetaMask;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,cAAc,GAAIC,OAAO,IAAK;EAClC,QAAQA,OAAO;IACb,KAAK,KAAK;MACR,OAAO,SAAS;IAElB,KAAK,QAAQ;MACX,OAAO,OAAO;IAEhB;MACE,OAAO,eAAe;EAAC;EAC1B;AACH,CAAC;AAED,MAAMC,YAAY,GAAGC,OAAO,IAAKA,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;AAEjF,MAAMC,eAAe,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;EAC1C,oBACER,OAAA;IAAAS,QAAA,GAAM,eAAa,EAACR,cAAc,CAACO,KAAK,CAAC,EAAC,MAAI,EAACL,YAAY,CAACI,OAAO,CAAC;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAQ;AAEhF,CAAC;AAED,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;EACtC,oBACEf,OAAA;IAAAS,QAAA,GAAM,6BACuB,eAAAT,OAAA;MAAQgB,OAAO,EAAED,OAAQ;MAAAN,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEX,CAAC;AAED,MAAMI,YAAY,GAAGA,CAACC,MAAM,EAAEX,OAAO,EAAEC,KAAK,EAAEO,OAAO,KAAK;EACxD,QAAQG,MAAM;IACZ,KAAK,WAAW;MACd,OAAOZ,eAAe,CAACC,OAAO,EAAEC,KAAK,CAAC;IAExC,KAAK,eAAe;MAClB,OAAOM,kBAAkB,CAACC,OAAO,CAAC;IAEpC,KAAK,eAAe;MAClB,oBAAOf,OAAA;QAAAS,QAAA,EAAM;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAEhD;MACE;EAAO;AAEb,CAAC;AAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,OAAO,GAAGxB,UAAU,CAACC,eAAe,CAAC;EAE3C,oBACEE,OAAA;IAASsB,SAAS,EAAC,mBAAmB;IAAAb,QAAA,EACnCQ,YAAY,CAACI,OAAO,CAACH,MAAM,EAAEG,OAAO,CAACd,OAAO,EAAEc,OAAO,CAACb,KAAK,EAAEa,OAAO,CAACN,OAAO;EAAC;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtE;AAEd,CAAC;AAAAO,EAAA,CARKD,QAAQ;AAAAI,EAAA,GAARJ,QAAQ;AAUd,eAAeA,QAAQ;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}